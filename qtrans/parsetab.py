
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/rightUMINUSNAME NUMBERvexpression : sexpression '*' vexpression\n                   | sexpression     vexpression\n                   | vexpression '+' vexpression\n                   | vexpression '-' vexpression\n                   | 'T'\n                   sexpression : sexpression '*' sexpression\n                   | sexpression     sexpression\n                   | sexpression '+' sexpression\n                   | sexpression '-' sexpression\n                   | sexpression '/' sexpression\n                   | sexpression '^' sexpressionstatement : sexpressionsexpression : '-' sexpression %prec UMINUSsexpression : '(' sexpression ')'\n                   | '[' sexpression ']'\n                   | '{' sexpression '}' sexpression : NUMBERsexpression : NAME"
    
_lr_action_items = {'T':([0,2,8,9,10,11,12,13,19,25,27,28,29,30,31,33,34,35,36,],[4,4,-17,-18,4,4,4,4,-13,-6,-8,-9,-10,-11,-7,-14,-15,-16,-6,]),'-':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[3,11,16,3,-5,3,3,3,-17,-18,3,3,16,3,11,3,3,3,3,-13,16,16,16,-3,-4,-6,-1,-8,-9,-10,16,16,3,-14,-15,-16,-6,]),'(':([0,2,3,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,],[5,5,5,5,5,5,-17,-18,5,5,5,5,5,5,5,5,-13,5,5,5,-6,-8,-9,-10,5,5,5,-14,-15,-16,-6,]),'[':([0,2,3,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,],[6,6,6,6,6,6,-17,-18,6,6,6,6,6,6,6,6,-13,6,6,6,-6,-8,-9,-10,6,6,6,-14,-15,-16,-6,]),'{':([0,2,3,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,],[7,7,7,7,7,7,-17,-18,7,7,7,7,7,7,7,7,-13,7,7,7,-6,-8,-9,-10,7,7,7,-14,-15,-16,-6,]),'NUMBER':([0,2,3,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,],[8,8,8,8,8,8,-17,-18,8,8,8,8,8,8,8,8,-13,8,8,8,-6,-8,-9,-10,8,8,8,-14,-15,-16,-6,]),'NAME':([0,2,3,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,],[9,9,9,9,9,9,-17,-18,9,9,9,9,9,9,9,9,-13,9,9,9,-6,-8,-9,-10,9,9,9,-14,-15,-16,-6,]),'$end':([1,4,14,23,24,26,],[0,-5,-2,-3,-4,-1,]),'+':([1,2,4,8,9,12,14,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,],[10,15,-5,-17,-18,15,10,-13,15,15,15,-3,-4,-6,-1,-8,-9,-10,15,15,-14,-15,-16,-6,]),'*':([2,8,9,12,19,20,21,22,25,27,28,29,30,31,33,34,35,36,],[13,-17,-18,13,-13,32,32,32,-6,32,32,-10,32,32,-14,-15,-16,-6,]),'/':([2,8,9,12,19,20,21,22,25,27,28,29,30,31,33,34,35,36,],[17,-17,-18,17,-13,17,17,17,-6,17,17,-10,17,17,-14,-15,-16,-6,]),'^':([2,8,9,12,19,20,21,22,25,27,28,29,30,31,33,34,35,36,],[18,-17,-18,18,-13,18,18,18,-6,-8,-9,-10,18,18,-14,-15,-16,-6,]),')':([8,9,19,20,27,28,29,30,31,33,34,35,36,],[-17,-18,-13,33,-8,-9,-10,-11,-7,-14,-15,-16,-6,]),']':([8,9,19,21,27,28,29,30,31,33,34,35,36,],[-17,-18,-13,34,-8,-9,-10,-11,-7,-14,-15,-16,-6,]),'}':([8,9,19,22,27,28,29,30,31,33,34,35,36,],[-17,-18,-13,35,-8,-9,-10,-11,-7,-14,-15,-16,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vexpression':([0,2,10,11,12,13,25,],[1,14,23,24,14,26,14,]),'sexpression':([0,2,3,5,6,7,10,11,12,13,15,16,17,18,19,20,21,22,25,27,28,29,30,31,32,36,],[2,12,19,20,21,22,2,2,12,25,27,28,29,30,31,31,31,31,12,31,31,31,31,31,36,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> vexpression","S'",1,None,None,None),
  ('vexpression -> sexpression * vexpression','vexpression',3,'p_vector_expr','parser.py',54),
  ('vexpression -> sexpression vexpression','vexpression',2,'p_vector_expr','parser.py',55),
  ('vexpression -> vexpression + vexpression','vexpression',3,'p_vector_expr','parser.py',56),
  ('vexpression -> vexpression - vexpression','vexpression',3,'p_vector_expr','parser.py',57),
  ('vexpression -> T','vexpression',1,'p_vector_expr','parser.py',58),
  ('sexpression -> sexpression * sexpression','sexpression',3,'p_scalar_expression','parser.py',72),
  ('sexpression -> sexpression sexpression','sexpression',2,'p_scalar_expression','parser.py',73),
  ('sexpression -> sexpression + sexpression','sexpression',3,'p_scalar_expression','parser.py',74),
  ('sexpression -> sexpression - sexpression','sexpression',3,'p_scalar_expression','parser.py',75),
  ('sexpression -> sexpression / sexpression','sexpression',3,'p_scalar_expression','parser.py',76),
  ('sexpression -> sexpression ^ sexpression','sexpression',3,'p_scalar_expression','parser.py',77),
  ('statement -> sexpression','statement',1,'p_statement_expression','parser.py',91),
  ('sexpression -> - sexpression','sexpression',2,'p_expression_uminus','parser.py',112),
  ('sexpression -> ( sexpression )','sexpression',3,'p_expression_group','parser.py',117),
  ('sexpression -> [ sexpression ]','sexpression',3,'p_expression_group','parser.py',118),
  ('sexpression -> { sexpression }','sexpression',3,'p_expression_group','parser.py',119),
  ('sexpression -> NUMBER','sexpression',1,'p_expression_number','parser.py',124),
  ('sexpression -> NAME','sexpression',1,'p_expression_name','parser.py',129),
]
